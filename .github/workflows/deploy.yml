name: Deploy to Firebase Hosting

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate runtime config
        run: |
          mkdir -p ./build
          echo "window._env_ = {" >> ./build/env-config.js
          echo "  apiKey: \"${{ secrets.FIREBASE_API_KEY }}\"," >> ./build/env-config.js
          echo "  authDomain: \"${{ secrets.FIREBASE_AUTH_DOMAIN }}\"," >> ./build/env-config.js
          echo "  databaseURL: \"${{ secrets.FIREBASE_DATABASE_URL }}\"," >> ./build/env-config.js
          echo "  projectId: \"${{ secrets.FIREBASE_PROJECT_ID }}\"," >> ./build/env-config.js
          echo "  storageBucket: \"${{ secrets.FIREBASE_STORAGE_BUCKET }}\"," >> ./build/env-config.js
          echo "  messagingSenderId: \"${{ secrets.FIREBASE_MESSAGING_SENDER_ID }}\"," >> ./build/env-config.js
          echo "  appId: \"${{ secrets.FIREBASE_APP_ID }}\"," >> ./build/env-config.js
          echo "  measurementId: \"${{ secrets.FIREBASE_MEASUREMENT_ID }}\"" >> ./build/env-config.js
          echo "};" >> ./build/env-config.js
          echo "window.getFirebaseConfig = () => window._env_;" >> ./build/env-config.js

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      - name: Deploy to Firebase Hosting
        run: |
          npm install -g firebase-tools
          firebase deploy --only hosting,database --project ${{ secrets.FIREBASE_PROJECT_ID }}
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
